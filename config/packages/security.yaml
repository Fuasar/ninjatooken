parameters:
    sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder
    sonata.user.admin.user.entity: App\Entity\User\User
    sonata.user.admin.group.entity: App\Entity\User\Group

acl:
    connection: default

security:
    enable_authenticator_manager: true

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: username

    encoders:
        App\Entity\User\User:
            algorithm: auto

    role_hierarchy:
        ROLE_ADMIN_USER_MODERATOR:
            - ROLE_ADMIN_USER_LIST
            - ROLE_ADMIN_USER_VIEW
            - ROLE_ADMIN_USER_CREATE
            - ROLE_ADMIN_USER_EDIT
            - ROLE_ADMIN_USER_DELETE
        ROLE_ADMIN_CLAN_MODERATOR:
            - ROLE_ADMIN_CLAN_LIST
            - ROLE_ADMIN_CLAN_VIEW
            - ROLE_ADMIN_CLAN_CREATE
            - ROLE_ADMIN_CLAN_EDIT
            - ROLE_ADMIN_CLAN_DELETE
        ROLE_ADMIN_CLAN_UTILISATEUR_MODERATOR:
            - ROLE_ADMIN_CLAN_UTILISATEUR_LIST
            - ROLE_ADMIN_CLAN_UTILISATEUR_VIEW
            - ROLE_ADMIN_CLAN_UTILISATEUR_CREATE
            - ROLE_ADMIN_CLAN_UTILISATEUR_EDIT
            - ROLE_ADMIN_CLAN_UTILISATEUR_DELETE
        ROLE_ADMIN_CLAN_POSTULATION_MODERATOR:
            - ROLE_ADMIN_CLAN_POSTULATION_LIST
            - ROLE_ADMIN_CLAN_POSTULATION_VIEW
            - ROLE_ADMIN_CLAN_POSTULATION_CREATE
            - ROLE_ADMIN_CLAN_POSTULATION_EDIT
            - ROLE_ADMIN_CLAN_POSTULATION_DELETE
        ROLE_ADMIN_CLAN_PROPOSITION_MODERATOR:
            - ROLE_ADMIN_CLAN_PROPOSITION_LIST
            - ROLE_ADMIN_CLAN_PROPOSITION_VIEW
            - ROLE_ADMIN_CLAN_PROPOSITION_CREATE
            - ROLE_ADMIN_CLAN_PROPOSITION_EDIT
            - ROLE_ADMIN_CLAN_PROPOSITION_DELETE
        ROLE_ADMIN_FORUM_MODERATOR:
            - ROLE_ADMIN_FORUM_LIST
            - ROLE_ADMIN_FORUM_VIEW
            - ROLE_ADMIN_FORUM_EDIT
        ROLE_ADMIN_THREAD_MODERATOR:
            - ROLE_ADMIN_THREAD_LIST
            - ROLE_ADMIN_THREAD_VIEW
            - ROLE_ADMIN_THREAD_CREATE
            - ROLE_ADMIN_THREAD_EDIT
            - ROLE_ADMIN_THREAD_DELETE
        ROLE_ADMIN_COMMENT_MODERATOR:
            - ROLE_ADMIN_COMMENT_LIST
            - ROLE_ADMIN_COMMENT_VIEW
            - ROLE_ADMIN_COMMENT_CREATE
            - ROLE_ADMIN_COMMENT_EDIT
            - ROLE_ADMIN_COMMENT_DELETE
        ROLE_ADMIN_COMMENT_USER_MODERATOR:
            - ROLE_ADMIN_COMMENT_USER_LIST
            - ROLE_ADMIN_COMMENT_USER_VIEW
            - ROLE_ADMIN_COMMENT_USER_CREATE
            - ROLE_ADMIN_COMMENT_USER_EDIT
            - ROLE_ADMIN_COMMENT_USER_DELETE
        ROLE_ADMIN_NINJA_MODERATOR:
            - ROLE_ADMIN_NINJA_LIST
            - ROLE_ADMIN_NINJA_VIEW
            - ROLE_ADMIN_NINJA_CREATE
            - ROLE_ADMIN_NINJA_EDIT
            - ROLE_ADMIN_NINJA_DELETE
        ROLE_ADMIN_MESSAGE_MODERATOR:
            - ROLE_ADMIN_MESSAGE_LIST
            - ROLE_ADMIN_MESSAGE_VIEW
            - ROLE_ADMIN_MESSAGE_CREATE
            - ROLE_ADMIN_MESSAGE_EDIT
            - ROLE_ADMIN_MESSAGE_DELETE
        ROLE_ADMIN_MESSAGE_USER_MODERATOR:
            - ROLE_ADMIN_MESSAGE_USER_LIST
            - ROLE_ADMIN_MESSAGE_USER_VIEW
            - ROLE_ADMIN_MESSAGE_USER_CREATE
            - ROLE_ADMIN_MESSAGE_USER_EDIT
            - ROLE_ADMIN_MESSAGE_USER_DELETE
        ROLE_ADMIN_FRIEND_MODERATOR:
            - ROLE_ADMIN_FRIEND_LIST
            - ROLE_ADMIN_FRIEND_VIEW
            - ROLE_ADMIN_FRIEND_CREATE
            - ROLE_ADMIN_FRIEND_EDIT
            - ROLE_ADMIN_FRIEND_DELETE
        ROLE_ADMIN_CAPTURE_MODERATOR:
            - ROLE_ADMIN_CAPTURE_LIST
            - ROLE_ADMIN_CAPTURE_VIEW
            - ROLE_ADMIN_CAPTURE_CREATE
            - ROLE_ADMIN_CAPTURE_EDIT
            - ROLE_ADMIN_CAPTURE_DELETE
        ROLE_ADMIN_DETECTION_MODERATOR:
            - ROLE_ADMIN_DETECTION_LIST
        ROLE_ADMIN_USER_ADMIN:
            - ROLE_ADMIN_USER_EXPORT
        ROLE_ADMIN_GROUP_ADMIN:
            - ROLE_ADMIN_GROUP_LIST
            - ROLE_ADMIN_GROUP_VIEW
            - ROLE_ADMIN_GROUP_CREATE
            - ROLE_ADMIN_GROUP_EDIT
            - ROLE_ADMIN_GROUP_DELETE
            - ROLE_ADMIN_GROUP_EXPORT
        ROLE_ADMIN_CLAN_ADMIN:
            - ROLE_ADMIN_CLAN_EXPORT
        ROLE_ADMIN_CLAN_UTILISATEUR_ADMIN:
            - ROLE_ADMIN_CLAN_UTILISATEUR_EXPORT
        ROLE_ADMIN_CLAN_POSTULATION_ADMIN:
            - ROLE_ADMIN_CLAN_POSTULATION_EXPORT
        ROLE_ADMIN_CLAN_UTILISATEUR_PROPOSITION_ADMIN:
            - ROLE_ADMIN_CLAN_PROPOSITION_EXPORT
        ROLE_ADMIN_FORUM_ADMIN:
            - ROLE_ADMIN_FORUM_CREATE
            - ROLE_ADMIN_FORUM_DELETE
            - ROLE_ADMIN_FORUM_EXPORT
        ROLE_ADMIN_THREAD_ADMIN:
            - ROLE_ADMIN_THREAD_EXPORT
        ROLE_ADMIN_COMMENT_ADMIN:
            - ROLE_ADMIN_COMMENT_EXPORT
        ROLE_ADMIN_COMMENT_USER_ADMIN:
            - ROLE_ADMIN_COMMENT_USER_EXPORT
        ROLE_ADMIN_NINJA_ADMIN:
            - ROLE_ADMIN_NINJA_EXPORT
        ROLE_ADMIN_MESSAGE_ADMIN:
            - ROLE_ADMIN_MESSAGE_EXPORT
        ROLE_ADMIN_MESSAGE_USER_ADMIN:
            - ROLE_ADMIN_MESSAGE_USER_EXPORT
        ROLE_ADMIN_FRIEND_ADMIN:
            - ROLE_ADMIN_FRIEND_EXPORT
        ROLE_ADMIN_CAPTURE_ADMIN:
            - ROLE_ADMIN_CAPTURE_EXPORT

        # les roles qui seront utilis√©s
        ROLE_MODERATOR:
            - ROLE_USER
            - ROLE_SONATA_ADMIN
            - ROLE_ADMIN_USER_MODERATOR
            - ROLE_ADMIN_CLAN_MODERATOR
            - ROLE_ADMIN_CLAN_UTILISATEUR_MODERATOR
            - ROLE_ADMIN_CLAN_POSTULATION_MODERATOR
            - ROLE_ADMIN_CLAN_PROPOSITION_MODERATOR
            - ROLE_ADMIN_FORUM_MODERATOR
            - ROLE_ADMIN_THREAD_MODERATOR
            - ROLE_ADMIN_COMMENT_MODERATOR
            - ROLE_ADMIN_COMMENT_USER_MODERATOR
            - ROLE_ADMIN_NINJA_MODERATOR
            - ROLE_ADMIN_MESSAGE_MODERATOR
            - ROLE_ADMIN_MESSAGE_USER_MODERATOR
            - ROLE_ADMIN_FRIEND_MODERATOR
            - ROLE_ADMIN_CAPTURE_MODERATOR
            - ROLE_ADMIN_DETECTION_MODERATOR
        ROLE_ADMIN:
            - ROLE_MODERATOR
            - ROLE_ADMIN_USER_ADMIN
            - ROLE_ADMIN_GROUP_ADMIN
            - ROLE_ADMIN_CLAN_ADMIN
            - ROLE_ADMIN_CLAN_UTILISATEUR_ADMIN
            - ROLE_ADMIN_CLAN_POSTULATION_ADMIN
            - ROLE_ADMIN_CLAN_PROPOSITION_ADMIN
            - ROLE_ADMIN_FORUM_ADMIN
            - ROLE_ADMIN_THREAD_ADMIN
            - ROLE_ADMIN_COMMENT_ADMIN
            - ROLE_ADMIN_COMMENT_USER_ADMIN
            - ROLE_ADMIN_NINJA_ADMIN
            - ROLE_ADMIN_MESSAGE_ADMIN
            - ROLE_ADMIN_MESSAGE_USER_ADMIN
            - ROLE_ADMIN_FRIEND_ADMIN
            - ROLE_ADMIN_CAPTURE_ADMIN
            - ROLE_ADMIN_DETECTION_MODERATOR
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    firewalls:
        api:
            pattern: ^/unity/
            lazy: true
            custom_authenticator: App\Security\ApiAuthenticator
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: ninja_tooken_user_security_logout
                target: ninja_tooken_homepage
            lazy: true
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~
                always_remember_me: false
                remember_me_parameter: _remember_me

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(fr|en)/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/new$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/check-confirmation-email$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/confirm/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/confirmed$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/request-reset-password$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/send-resetting-email$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/check-resetting-email$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/user/reset-password/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/(fr|en)/compte, roles: ROLE_USER }

        - { path: ^/daFuckingAdmin, roles: [ROLE_MODERATOR, ROLE_ADMIN] }

        - { path: ^/daFuckingAdmin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/daFuckingAdmin/logout$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/daFuckingAdmin/login-check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # The WDT has to be allowed to anonymous users to avoid requiring the login with the AJAX request
        - { path: ^/_wdt/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # AsseticBundle paths used when using the controller for assets
        - { path: ^/js/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/css/, roles: IS_AUTHENTICATED_ANONYMOUSLY }